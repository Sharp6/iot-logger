{
  "swagger": "2.0",
  "info": {
    "description": "IoT logger",
    "version": "1.0.0",
    "title": "IoT logger"
  },
  "host": "localhost",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "sensor",
      "description": "Endpoints regarding sensors"
    },
    {
      "name": "sensorReading",
      "description": "Endpoints regarding sensor readings"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/sensors": {
      "get": {
        "tags": [
          "sensor"
        ],
        "summary": "Get all sensors",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sensor"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sensor"
        ],
        "summary": "Creates a new sensor",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "Name of the sensor",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/sensors/{sensorid}": {
      "get": {
        "tags": [
          "sensor"
        ],
        "summary": "Get a specific sensor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sensorid",
            "in": "path",
            "description": "id of the sensor which needs to be retrieved",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Sensor"
            }
          },
          "404": {
            "description": "Sensor not found"
          }
        }
      },
      "delete": {
        "tags": [
          "sensor"
        ],
        "summary": "Deletes a sensor",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sensorid",
            "in": "path",
            "description": "id of the sensor which needs to be deleted",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sensor not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Sensor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "sensor id"
        },
        "name": {
          "type": "string",
          "description": "name of the sensor"
        }
      }
    }
  }
}